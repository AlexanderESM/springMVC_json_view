version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/ecommerce_db  # Рабочая база
      SPRING_TEST_DATASOURCE_URL: jdbc:postgresql://db_test:5433/ecommerce_db_test  # Тестовая база
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_TEST_DATASOURCE_USERNAME: postgres
      SPRING_TEST_DATASOURCE_PASSWORD: postgres
    depends_on:
      - db
      - db_test
    restart: always

  db:
    image: postgres:15
    container_name: postgres_prod_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "ecommerce_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  db_test:
    image: postgres:15
    container_name: postgres_test_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce_db_test
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "ecommerce_db_test"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  postgres_prod_data:
  postgres_test_data:
